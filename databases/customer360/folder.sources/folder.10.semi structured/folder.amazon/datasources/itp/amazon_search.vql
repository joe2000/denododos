CREATE OR REPLACE SCANNER '<?xml version="1.0" encoding="UTF-8" ?>
  <ScannerInfoVO>
    <mainClass/>
    <mainInternalClass/>
    <name>CYBER_LETTERS_LEXER</name>
    <restorer2Class/>
    <restorer2InternalClass/>
    <scanner>AUTOGENERATED
LEXERTYPE="skeletons/html_nojs"
#include "tagsets/ALL4_6"
#include "tagsets/ALL4_6_BR_ENDP_P"
#include "tagsets/ALL4_6_ENDANCHOR_SPAN_SUP"
</scanner>
    <tagSets>
      <entry>
        <key>ALL4_6</key>
        <value>AUTOGENERATED
SET "ALL4_6":"ALL4_6"
ANCHOR(URL=^CompleteURL(href,@URLBASE))
ENDANCHOR
ABBR
ENDABBR
ACRONYM
ENDACRONYM
ADDRESS
ENDADDRESS
APPLET
ENDAPPLET
AREA
ENDAREA
B
ENDB
BASE(URL=^CompleteURL(href,@URLBASE))
BDO
ENDBDO
BIG
ENDBIG
BLOCKQUOTE
ENDBLOCKQUOTE
BODY
ENDBODY
BR
BUTTON(INPUT_NAME=$$name,VALUE=value)
ENDBUTTON
CAPTION
ENDCAPTION
CENTER
ENDCENTER
CITE
ENDCITE
CODE
ENDCODE
COL
COLGROUP
ENDCOLGROUP
DD
ENDDD
DEL
ENDDEL
DIR
ENDDIR
DIV
ENDDIV
DFN
ENDDFN
DL
ENDDL
DT
ENDDT
EM
ENDEM
FIELDSET
ENDFIELDSET
FONT
ENDFONT
FORM(FORM_NAME=$$name,ACTION=action)
ENDFORM
FRAME(SRC=^CompleteURL(src,@URLBASE))
FRAMESET
ENDFRAMESET
H1
ENDH1
H2
ENDH2
H3
ENDH3
H4
ENDH4
H5
ENDH5
H6
ENDH6
HEAD
ENDHEAD
HR
HTML
ENDHTML
I
ENDI
IFRAME(SRC=^CompleteURL(src,@URLBASE))
ENDIFRAME
IMG(SRC=^CompleteURL(src,@URLBASE))
INPUT(INPUT_NAME=$$name,VALUE=value)
INS
ENDINS
ISINDEX
ENDISINDEX
KBD
ENDKBD
LABEL
ENDLABEL
LEGEND
ENDLEGEND
LI
ENDLI
LINK(URL=^CompleteURL(href,@URLBASE))
MAP
ENDMAP
META
NOBR
ENDNOBR
NOFRAMES
ENDNOFRAMES
NOSCRIPT
ENDNOSCRIPT
OBJECT
ENDOBJECT
OL
ENDOL
OPTGROUP
ENDOPTGROUP
OPTION
ENDOPTION
P
ENDP
PARAM
PRE
ENDPRE
Q
ENDQ
SAMP
ENDSAMP
SCRIPT(SRC=^CompleteURL(src,@URLBASE))
ENDSCRIPT
SELECT(SELECT_NAME=$$name)
ENDSELECT
SMALL
ENDSMALL
SPAN
ENDSPAN
STRONG
ENDSTRONG
STYLE
ENDSTYLE
SUB
ENDSUB
SUP
ENDSUP
TABLE
ENDTABLE
TBODY
ENDTBODY
TD
ENDTD
TEXTAREA
ENDTEXTAREA
TFOOT
ENDTFOOT
TH
ENDTH
THEAD
ENDTHEAD
TITLE
ENDTITLE
TR
ENDTR
TT
ENDTT
U
ENDU
UL
ENDUL
VAR
ENDVAR
ENDSET
</value>
      </entry>
      <entry>
        <key>ALL4_6_BR_ENDP_P</key>
        <value>AUTOGENERATED
SET "ALL4_6_BR_ENDP_P":"ALL4_6_BR_ENDP_P"
ANCHOR(URL=^CompleteURL(href,@URLBASE))
ENDANCHOR
ABBR
ENDABBR
ACRONYM
ENDACRONYM
ADDRESS
ENDADDRESS
APPLET
ENDAPPLET
AREA
ENDAREA
B
ENDB
BASE(URL=^CompleteURL(href,@URLBASE))
BDO
ENDBDO
BIG
ENDBIG
BLOCKQUOTE
ENDBLOCKQUOTE
BODY
ENDBODY
BUTTON(INPUT_NAME=$$name,VALUE=value)
ENDBUTTON
CAPTION
ENDCAPTION
CENTER
ENDCENTER
CITE
ENDCITE
CODE
ENDCODE
COL
COLGROUP
ENDCOLGROUP
DD
ENDDD
DEL
ENDDEL
DIR
ENDDIR
DIV
ENDDIV
DFN
ENDDFN
DL
ENDDL
DT
ENDDT
EM
ENDEM
FIELDSET
ENDFIELDSET
FONT
ENDFONT
FORM(FORM_NAME=$$name,ACTION=action)
ENDFORM
FRAME(SRC=^CompleteURL(src,@URLBASE))
FRAMESET
ENDFRAMESET
H1
ENDH1
H2
ENDH2
H3
ENDH3
H4
ENDH4
H5
ENDH5
H6
ENDH6
HEAD
ENDHEAD
HR
HTML
ENDHTML
I
ENDI
IFRAME(SRC=^CompleteURL(src,@URLBASE))
ENDIFRAME
IMG(SRC=^CompleteURL(src,@URLBASE))
INPUT(INPUT_NAME=$$name,VALUE=value)
INS
ENDINS
ISINDEX
ENDISINDEX
KBD
ENDKBD
LABEL
ENDLABEL
LEGEND
ENDLEGEND
LI
ENDLI
LINK(URL=^CompleteURL(href,@URLBASE))
MAP
ENDMAP
META
NOBR
ENDNOBR
NOFRAMES
ENDNOFRAMES
NOSCRIPT
ENDNOSCRIPT
OBJECT
ENDOBJECT
OL
ENDOL
OPTGROUP
ENDOPTGROUP
OPTION
ENDOPTION
PARAM
PRE
ENDPRE
Q
ENDQ
SAMP
ENDSAMP
SCRIPT(SRC=^CompleteURL(src,@URLBASE))
ENDSCRIPT
SELECT(SELECT_NAME=$$name)
ENDSELECT
SMALL
ENDSMALL
SPAN
ENDSPAN
STRONG
ENDSTRONG
STYLE
ENDSTYLE
SUB
ENDSUB
SUP
ENDSUP
TABLE
ENDTABLE
TBODY
ENDTBODY
TD
ENDTD
TEXTAREA
ENDTEXTAREA
TFOOT
ENDTFOOT
TH
ENDTH
THEAD
ENDTHEAD
TITLE
ENDTITLE
TR
ENDTR
TT
ENDTT
U
ENDU
UL
ENDUL
VAR
ENDVAR
ENDSET
</value>
      </entry>
      <entry>
        <key>ALL4_6_ENDANCHOR_SPAN_SUP</key>
        <value>AUTOGENERATED
SET "ALL4_6_ENDANCHOR_SPAN_SUP":"ALL4_6_ENDANCHOR_SPAN_SUP"
ANCHOR(URL=^CompleteURL(href,@URLBASE))
ABBR
ENDABBR
ACRONYM
ENDACRONYM
ADDRESS
ENDADDRESS
APPLET
ENDAPPLET
AREA
ENDAREA
B
ENDB
BASE(URL=^CompleteURL(href,@URLBASE))
BDO
ENDBDO
BIG
ENDBIG
BLOCKQUOTE
ENDBLOCKQUOTE
BODY
ENDBODY
BR
BUTTON(INPUT_NAME=$$name,VALUE=value)
ENDBUTTON
CAPTION
ENDCAPTION
CENTER
ENDCENTER
CITE
ENDCITE
CODE
ENDCODE
COL
COLGROUP
ENDCOLGROUP
DD
ENDDD
DEL
ENDDEL
DIR
ENDDIR
DIV
ENDDIV
DFN
ENDDFN
DL
ENDDL
DT
ENDDT
EM
ENDEM
FIELDSET
ENDFIELDSET
FONT
ENDFONT
FORM(FORM_NAME=$$name,ACTION=action)
ENDFORM
FRAME(SRC=^CompleteURL(src,@URLBASE))
FRAMESET
ENDFRAMESET
H1
ENDH1
H2
ENDH2
H3
ENDH3
H4
ENDH4
H5
ENDH5
H6
ENDH6
HEAD
ENDHEAD
HR
HTML
ENDHTML
I
ENDI
IFRAME(SRC=^CompleteURL(src,@URLBASE))
ENDIFRAME
IMG(SRC=^CompleteURL(src,@URLBASE))
INPUT(INPUT_NAME=$$name,VALUE=value)
INS
ENDINS
ISINDEX
ENDISINDEX
KBD
ENDKBD
LABEL
ENDLABEL
LEGEND
ENDLEGEND
LI
ENDLI
LINK(URL=^CompleteURL(href,@URLBASE))
MAP
ENDMAP
META
NOBR
ENDNOBR
NOFRAMES
ENDNOFRAMES
NOSCRIPT
ENDNOSCRIPT
OBJECT
ENDOBJECT
OL
ENDOL
OPTGROUP
ENDOPTGROUP
OPTION
ENDOPTION
P
ENDP
PARAM
PRE
ENDPRE
Q
ENDQ
SAMP
ENDSAMP
SCRIPT(SRC=^CompleteURL(src,@URLBASE))
ENDSCRIPT
SELECT(SELECT_NAME=$$name)
ENDSELECT
SMALL
ENDSMALL
ENDSPAN
STRONG
ENDSTRONG
STYLE
ENDSTYLE
SUB
ENDSUB
ENDSUP
TABLE
ENDTABLE
TBODY
ENDTBODY
TD
ENDTD
TEXTAREA
ENDTEXTAREA
TFOOT
ENDTFOOT
TH
ENDTH
THEAD
ENDTHEAD
TITLE
ENDTITLE
TR
ENDTR
TT
ENDTT
U
ENDU
UL
ENDUL
VAR
ENDVAR
ENDSET
</value>
      </entry>
    </tagSets>
  </ScannerInfoVO>
';

CREATE OR REPLACE WRAPPER ITP amazon_search
    FOLDER = '/sources/10.semi structured/amazon'
    VERIFICATION false
    JSCRIPT '
function getInit() {{
var Start_1 = new INIT();
Start_1.setI18n("US_PST");
Start_1.setText("search_term", OBLIGATORY);
return Start_1;
}}
function getOutputSchema() {{
var _structure_Record_Constructor_1_output = new RECORD_STRUCTURE("Record_Constructor_1_output");
_structure_Record_Constructor_1_output.setText("name",NOT_SENSITIVE);
_structure_Record_Constructor_1_output.setText("price",NOT_SENSITIVE);
return _structure_Record_Constructor_1_output;
}}
function main() {{
var Start_1_output = null;
var Start_1 = null;
Start_1 = new INIT(null,"Start_1_output");
Start_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Start_1.onError(INVALID_QUERY_ERROR, ON_ERROR_RAISE);
Start_1.setI18n("US_PST");
Start_1.setText("search_term", OBLIGATORY);
Start_1.setComponentName("Start_1");
Start_1_output = Start_1.exec();
var Sequence_1 = null;
var Sequence_1_output = null;
var _structure_Extractor_1_ITEM = new RECORD_STRUCTURE("Extractor_1_ITEM");
_structure_Extractor_1_ITEM.setText("name",NOT_SENSITIVE);
_structure_Extractor_1_ITEM.setText("price",NOT_SENSITIVE);
var Extractor_1_output = null;
try {{
Sequence_1 = new SEQUENCE("sequence://navigate(http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=@{{search_term}},1);", SEQUENCE_IEBROWSER);
Sequence_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Sequence_1.onError(CONNECTION_ERROR, ON_ERROR_RAISE);
Sequence_1.onError(SEQUENCE_ERROR, ON_ERROR_RAISE);
Sequence_1.onError(HTTP_ERROR, ON_ERROR_RAISE);
Sequence_1.onError(TIMEOUT_ERROR, ON_ERROR_RAISE);
Sequence_1.setRetries(3);
Sequence_1.setRetryDelay(3000);
Sequence_1.setHttpConfigurationSequence("Navigate(about:config?,0);");
Sequence_1.setComponentName("Sequence_1");
Sequence_1_output = Sequence_1.exec([Start_1_output]);
var Extractor_1 = null;
Extractor_1 = new EXTRACTOR("Extractor_1", Sequence_1_output, "#include \"scanners/CYBER_LETTERS_LEXER\"  {{ NAME=\"Extractor_1_ITEM\"   TAGSET=\"ALL4_6\"   :name ENDH2 ENDANCHOR DIV SPAN \"by\" ENDSPAN SPAN IRRELEVANT ENDSPAN ENDDIV ENDDIV DIV DIV DIV ANCHOR SPAN \"$$\" :price }}", _structure_Extractor_1_ITEM);
Extractor_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Extractor_1.onError(INVALID_RECORD_ERROR, ON_ERROR_RAISE);
Extractor_1.setI18n("US_PST");
Extractor_1.setNormalizeSource(true);
Extractor_1.setComponentName("Extractor_1");
Extractor_1_output = Extractor_1.exec([]);
var Iterator_1 = null;
var Iterator_1_output = null;
Iterator_1 = new ITERATOR(Extractor_1_output);
Iterator_1.setComponentName("Iterator_1");
Iterator_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Iterator_1.onError(INNER_ERROR, ON_ERROR_RAISE);
while(Iterator_1.hasNext()) {{
Iterator_1_output = Iterator_1.next();
try {{
var _structure_Record_Constructor_1_output = new RECORD_STRUCTURE("Record_Constructor_1_output");
_structure_Record_Constructor_1_output.setText("name",NOT_SENSITIVE);
_structure_Record_Constructor_1_output.setText("price",NOT_SENSITIVE);
var Record_Constructor_1_output = null;
var Record_Constructor_1 = null;
Record_Constructor_1 = new RECORD_CONSTRUCTOR([Iterator_1_output], "Record_Constructor_1_output");
Record_Constructor_1.setComponentName("Record_Constructor_1");
Record_Constructor_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Record_Constructor_1.add("price", "$$0.price",NOT_SENSITIVE);
Record_Constructor_1.add("name", "$$0.name",NOT_SENSITIVE);
Record_Constructor_1_output = Record_Constructor_1.exec();
var Output_1 = null;
Output_1 = new OUTPUT(_structure_Record_Constructor_1_output);
Output_1.setComponentName("Output_1");
Output_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Output_1.add(Record_Constructor_1_output);
Output_1.close();
}} catch (e) {{
Iterator_1.onError(RUNTIME_ERROR, ON_ERROR_RAISE);
Iterator_1.onError(INNER_ERROR, ON_ERROR_RAISE);
Iterator_1.handleError(e);
}}
}}
}} finally {{
Sequence_1.close();
}}
}}
'
    MODEL '<?xml version="1.0" encoding="UTF-8" ?>
<InitComponent className="com.denodo.itp.model.components.InitComponent">
<browserType>0</browserType>
<checkoutTime>0</checkoutTime>
<comment>This is the initial component.
The output of this component is a record that defines the inputs of the wrapper: when executing it, these values will be specified externally.
The output is not yet set, the configuration of the component can be edited by double-clicking in the component.</comment>
<componentName>Start_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>10</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<expirationTime>0</expirationTime>
<globalBackSequence/>
<inRetryMode>false</inRetryMode>
<inputs/>
<locale>
<country>US</country>
<currency>US DOLLAR</currency>
<currencyDecimalPosition>2</currencyDecimalPosition>
<currencyDecimalSeparator/>
<currencyGroupSeparator/>
<currencySymbol/>
<datePattern>MMM d, yyyy h:mm:ss a</datePattern>
<displayName>US_PST :  English (United States)</displayName>
<doubleDecimalPosition>2</doubleDecimalPosition>
<doubleDecimalSeparator/>
<doubleGroupSeparator/>
<language>en</language>
<moneyPattern>###,###,###.##</moneyPattern>
<name>US_PST</name>
<sizeDecimalPosition/>
<sizeDecimalSeparator/>
<sizeGroupSeparator/>
<sizeUnits/>
<timePattern>DAY</timePattern>
<timezone>PST</timezone>
<variant/>
</locale>
<mandatoryFields>
<mandatoryField>search_term</mandatoryField>
</mandatoryFields>
<maxBrowserTTL>0</maxBrowserTTL>
<maxPoolSize>0</maxPoolSize>
<minPoolSize>0</minPoolSize>
<nextComponent className="com.denodo.itp.model.components.SequenceComponent">
<backSequence/>
<backSequenceWithComments/>
<browserOptions>
<entry>
<key>JSBrowser.MINIMIZE_DOM</key>
<value>0</value>
</entry>
<entry>
<key>JSBrowser.OPTIMIZATION_MODE</key>
<value>none</value>
</entry>
</browserOptions>
<comment>This is the first sequence component.
This component makes the navigation to the first page of results. This navigation will probably include filling web forms and/or authenticating the user.
The configuration of the component can be edited by double-clicking in the component.</comment>
<componentName>Sequence_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>4</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>5</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>6</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>7</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<httpConfigurationSequence>Navigate(about:config?,0);</httpConfigurationSequence>
<httpOptimizationData/>
<inRetryMode>false</inRetryMode>
<inputBrowserType>0</inputBrowserType>
<inputReuseConnections>false</inputReuseConnections>
<inputSequence>navigate(http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;field-keywords=@{{search_term}},1);</inputSequence>
<inputSequenceType>1</inputSequenceType>
<inputSequenceWithComments>navigate(http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&amp;field-keywords=@{{search_term}},1);</inputSequenceWithComments>
<inputs>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>search_term</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Start_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>search_term</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp>.*</regexp>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</firstParameterType>
<firstParameterVariableName/>
<parameterName>Input values</parameterName>
<parameterTypes>
<parameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>search_term</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Start_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>search_term</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp>.*</regexp>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</parameterType>
</parameterTypes>
<parameterVariableNames/>
</input>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterVariableName/>
<parameterName>Input page</parameterName>
<parameterTypes/>
<parameterVariableNames/>
</input>
</inputs>
<maxRetries>3</maxRetries>
<nextComponent className="com.denodo.itp.model.components.ExtractorComponent">
<comment>The Extractor component extracts information from each results page. It defines a record structure and matches the current page into a list of records with that structure.
The configuration of the component can be edited by double-clicking in the component.</comment>
<componentName>Extractor_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>8</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<inRetryMode>false</inRetryMode>
<inputSpecification>#include "scanners/CYBER_LETTERS_LEXER"
{{ NAME="Extractor_1_ITEM"
TAGSET="ALL4_6"
:name ENDH2 ENDANCHOR DIV SPAN "by" ENDSPAN SPAN IRRELEVANT ENDSPAN ENDDIV ENDDIV DIV DIV DIV ANCHOR SPAN "$$" :price
}}
</inputSpecification>
<inputSpecificationWithoutComments>#include "scanners/CYBER_LETTERS_LEXER"
{{ NAME="Extractor_1_ITEM"
TAGSET="ALL4_6"
:name ENDH2 ENDANCHOR DIV SPAN "by" ENDSPAN SPAN IRRELEVANT ENDSPAN ENDDIV ENDDIV DIV DIV DIV ANCHOR SPAN "$$" :price
}}
</inputSpecificationWithoutComments>
<inputs>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterType className="com.denodo.itp.model.types.PageType">
<name>Sequence_1_output</name>
<type>2</type>
</firstParameterType>
<firstParameterVariableName/>
<parameterName>Input page</parameterName>
<parameterTypes>
<parameterType className="com.denodo.itp.model.types.PageType">
<name>Sequence_1_output</name>
<type>2</type>
</parameterType>
</parameterTypes>
<parameterVariableNames/>
</input>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterVariableName/>
<parameterName>Input values</parameterName>
<parameterTypes/>
<parameterVariableNames/>
</input>
</inputs>
<locale>
<country>US</country>
<currency>US DOLLAR</currency>
<currencyDecimalPosition>2</currencyDecimalPosition>
<currencyDecimalSeparator/>
<currencyGroupSeparator/>
<currencySymbol/>
<datePattern>MMM d, yyyy h:mm:ss a</datePattern>
<displayName>US_PST :  English (United States)</displayName>
<doubleDecimalPosition>2</doubleDecimalPosition>
<doubleDecimalSeparator/>
<doubleGroupSeparator/>
<language>en</language>
<moneyPattern>###,###,###.##</moneyPattern>
<name>US_PST</name>
<sizeDecimalPosition/>
<sizeDecimalSeparator/>
<sizeGroupSeparator/>
<sizeUnits/>
<timePattern>DAY</timePattern>
<timezone>PST</timezone>
<variant/>
</locale>
<nextComponent className="com.denodo.itp.model.components.IteratorComponent">
<comment>The Iterator component takes a list of records and iterates over it making available each separate record of the list.
Here, the Iterator makes available each individual result found by the Extractor in the results page.
The iteration can be configured to be performed in serial or parallel fashion. The configuration of the component can be edited by double-clicking in the component.</comment>
<componentName>Iterator_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
<entry>
<key>15</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<firstChild className="com.denodo.itp.model.components.RecordConstructorComponent">
<comment>The record constructor component takes several lists, records and values as inputs and builds a new record from them. In this case,  it is typically used to: a) apply transformations on the fields of an extracted record, b) add new derived fields to an extracted record. The configuration of the component can be edited by double-clicking in the component.</comment>
<componentName>Record_Constructor_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<inRetryMode>false</inRetryMode>
<inputAddValues>
<entry>
<key>price</key>
<value>$$0.price</value>
</entry>
<entry>
<key>name</key>
<value>$$0.name</value>
</entry>
</inputAddValues>
<inputUserValues/>
<inputs>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Iterator_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</firstParameterType>
<firstParameterVariableName/>
<parameterName>Input values</parameterName>
<parameterTypes>
<parameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Iterator_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</parameterType>
</parameterTypes>
<parameterVariableNames/>
</input>
</inputs>
<nextComponent className="com.denodo.itp.model.components.OutputComponent">
<comment>The Output component takes a record and sends it to the output of the wrapper.
Here the component outputs all the result records found by the Extractor component.
The component has no configuration.</comment>
<componentName>Output_1</componentName>
<context/>
<customErrorExpressions/>
<errorManagers>
<entry>
<key>2</key>
<value>
<actionManagers/>
<handler>RAISE</handler>
</value>
</entry>
</errorManagers>
<errorRecords/>
<inRetryMode>false</inRetryMode>
<inputs>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Record_Constructor_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</firstParameterType>
<firstParameterVariableName/>
<parameterName>Record</parameterName>
<parameterTypes>
<parameterType className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Record_Constructor_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</parameterType>
</parameterTypes>
<parameterVariableNames/>
</input>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterVariableName/>
<parameterName>Input records</parameterName>
<parameterTypes/>
<parameterVariableNames/>
</input>
</inputs>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<outputName/>
<regenerable>true</regenerable>
<withOutput>false</withOutput>
</nextComponent>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<output className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Record_Constructor_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</output>
<outputName/>
<regenerable>true</regenerable>
<withOutput>true</withOutput>
</firstChild>
<inRetryMode>false</inRetryMode>
<inputs>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterType className="com.denodo.itp.model.types.ListType">
<name>Extractor_1_output</name>
<record className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Extractor_1_ITEM</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</record>
<type>1</type>
</firstParameterType>
<firstParameterVariableName/>
<parameterName>Input records</parameterName>
<parameterTypes>
<parameterType className="com.denodo.itp.model.types.ListType">
<name>Extractor_1_output</name>
<record className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Extractor_1_ITEM</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</record>
<type>1</type>
</parameterType>
</parameterTypes>
<parameterVariableNames/>
</input>
<input className="com.denodo.itp.model.ComponentParameter">
<firstParameterVariableName/>
<parameterName>Input values</parameterName>
<parameterTypes/>
<parameterVariableNames/>
</input>
</inputs>
<maxConcurrentIterations>0</maxConcurrentIterations>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<output className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Iterator_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</output>
<outputName/>
<parallelExecution>false</parallelExecution>
<regenerable>true</regenerable>
<withOutput>true</withOutput>
</nextComponent>
<normalizeSource>true</normalizeSource>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<output className="com.denodo.itp.model.types.ListType">
<name>Extractor_1_output</name>
<record className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>name</String>
<String>price</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Extractor_1_ITEM</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>name</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>price</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp/>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</record>
<type>1</type>
</output>
<outputName/>
<regenerable>true</regenerable>
<structureName>Extractor_1_ITEM</structureName>
<withOutput>true</withOutput>
</nextComponent>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<output className="com.denodo.itp.model.types.PageType">
<name>Sequence_1_output</name>
<type>2</type>
</output>
<outputName/>
<regenerable>true</regenerable>
<timeBetweenRetries>3000</timeBetweenRetries>
<useCustomBack>false</useCustomBack>
<withOutput>true</withOutput>
</nextComponent>
<objectTimeout>0</objectTimeout>
<onErrorActions/>
<onErrorExpressions/>
<onErrorMessages/>
<output className="com.denodo.itp.model.types.RecordType">
<empty>false</empty>
<fieldNames>
<String>search_term</String>
</fieldNames>
<listTypes/>
<lists/>
<name>Start_1_output</name>
<pages/>
<recordTypes/>
<records/>
<simpleTypes/>
<simples>
<simple className="com.denodo.itp.model.types.RecordFieldEntry">
<fieldName>search_term</fieldName>
<fieldType className="com.denodo.itp.model.types.simple.StringType">
<alias/>
<loginField>false</loginField>
<name>string</name>
<passwordField>false</passwordField>
<regexp>.*</regexp>
<sensitive>false</sensitive>
<type>4</type>
</fieldType>
</simple>
</simples>
<type>3</type>
</output>
<outputName/>
<pingQuery/>
<poolName/>
<preSequence/>
<regenerable>true</regenerable>
<reusableObjects>false</reusableObjects>
<sensitiveFields/>
<sessionTimeout>0</sessionTimeout>
<sessionValidationTimeout>0</sessionValidationTimeout>
<sleepTime>0</sleepTime>
<withOutput>true</withOutput>
</InitComponent>
'
    SCANNERS ('CYBER_LETTERS_LEXER')
;

